Find H-Index
Difficulty: MediumAccuracy: 70.79%Submissions: 6K+Points: 4
Given an integer array citations[], where citations[i] is the number of citations a researcher received for the ith paper. The task is to find the H-index.

H-Index is the largest value such that the researcher has at least H papers that have been cited at least H times.

Examples:

Input: citations[] = [3, 0, 5, 3, 0]
Output: 3
Explanation: There are at least 3 papers (3, 5, 3) with at least 3 citations.
Input: citations[] = [5, 1, 2, 4, 1]
Output: 2
Explanation: There are 3 papers (with citation counts of 5, 2, and 4) that have 2 or more citations. However, the H-Index cannot be 3 because there are not 3 papers with 3 or more citations.
Input: citations[] = [0, 0]
Output: 0
Constraints:
1 ≤ citations.size() ≤ 106
0 ≤ citations[i] ≤ 106





class Solution {
    // Function to find H-Index
    public int hIndex(int[] citations) {
        // Step 1: Sort the citations array in ascending order
        java.util.Arrays.sort(citations);
        int n = citations.length;

        // Step 2: Traverse the sorted array to find the H-Index
        for (int i = 0; i < n; i++) {
            int h = n - i; // Number of papers with at least 'h' citations
            if (citations[i] >= h) {
                return h;
            }
        }

        // Step 3: If no valid H-Index is found, return 0
        return 0;
    }

    // Example usage
    public static void main(String[] args) {
        Solution solution = new Solution();
        int[] citations1 = {3, 0, 5, 3, 0};
        int[] citations2 = {5, 1, 2, 4, 1};
        int[] citations3 = {0, 0};

        System.out.println("H-Index (Example 1): " + solution.hIndex(citations1)); // Output: 3
        System.out.println("H-Index (Example 2): " + solution.hIndex(citations2)); // Output: 2
        System.out.println("H-Index (Example 3): " + solution.hIndex(citations3)); // Output: 0
    }
}

