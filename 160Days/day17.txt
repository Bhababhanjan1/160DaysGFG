Non Repeating Character
Difficulty: EasyAccuracy: 40.43%Submissions: 233K+Points: 2
Given a string s consisting of lowercase Latin Letters. Return the first non-repeating character in s. If there is no non-repeating character, return '$'.
Note: When you return '$' driver code will output -1.

Examples:

Input: s = "geeksforgeeks"
Output: 'f'
Explanation: In the given string, 'f' is the first character in the string which does not repeat.
Input: s = "racecar"
Output: 'e'
Explanation: In the given string, 'e' is the only character in the string which does not repeat.
Input: s = "aabbccc"
Output: -1
Explanation: All the characters in the given string are repeating.
Constraints:
1 <= s.size() <= 105






class Solution {
    // Function to find the first non-repeating character in a string.
    static char nonRepeatingChar(String s) {
        // Step 1: Create an array to store character frequencies
        int[] freq = new int[26]; // For lowercase Latin letters
        
        // Step 2: Count the frequency of each character
        for (char c : s.toCharArray()) {
            freq[c - 'a']++;
        }

        // Step 3: Find the first non-repeating character
        for (char c : s.toCharArray()) {
            if (freq[c - 'a'] == 1) {
                return c; // Return the first non-repeating character
            }
        }

        // Step 4: If no non-repeating character, return '$'
        return '$';
    }
    
    // Test the function
    public static void main(String[] args) {
        System.out.println(nonRepeatingChar("geeksforgeeks")); // Output: 'f'
        System.out.println(nonRepeatingChar("racecar"));       // Output: 'e'
        System.out.println(nonRepeatingChar("aabbccc"));       // Output: '$'
    }
}
