Min Chars to Add for Palindrome
Difficulty: HardAccuracy: 46.79%Submissions: 52K+Points: 8
Given a string s, the task is to find the minimum characters to be added at the front to make the string palindrome.

Note: A palindrome string is a sequence of characters that reads the same forward and backward.

Examples:

Input: s = "abc"
Output: 2
Explanation: Add 'b' and 'c' at front of above string to make it palindrome : "cbabc"
Input: s = "aacecaaaa"
Output: 2
Explanation: Add 2 a's at front of above string to make it palindrome : "aaaacecaaaa"
Constraints:
1 <= s.size() <= 106






class Solution {
    public static int minChar(String s) {
        // Create the concatenated string: s + '#' + reverse(s)
        String reversed = new StringBuilder(s).reverse().toString();
        String temp = s + "#" + reversed;

        // Compute the LPS (longest prefix suffix) array
        int lps[] = computeLPS(temp);

        // Minimum characters to add at the front
        return s.length() - lps[temp.length() - 1];
    }

    private static int[] computeLPS(String pattern) {
        int n = pattern.length();
        int[] lps = new int[n];
        int length = 0;
        int i = 1;

        while (i < n) {
            if (pattern.charAt(i) == pattern.charAt(length)) {
                length++;
                lps[i] = length;
                i++;
            } else {
                if (length != 0) {
                    length = lps[length - 1];
                } else {
                    lps[i] = 0;
                    i++;
                }
            }
        }

        return lps;
    }
}


